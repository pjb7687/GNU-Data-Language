image: Visual Studio 2015
branches:
  only:
    - master
clone_folder: c:\projects\gdl
configuration:
  - Release
  - Debug
environment:
  matrix:
  - platform: mingw64630i686
  # - platform: mingw64630x8664 # 64bit unsupported yet
matrix:
  fast_finish: true
  
init:
  - git config --global core.autocrlf input

install:
  - ren "C:\Program Files\Git\usr\bin\sh.exe" _sh.exe
  - ps: >-
      If ($env:platform -Match "mingw64630i686") {
       $env:PATH=C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin;%PATH%
       md c:\projects\gdl\win32libs
       cd c:\projects\gdl\win32libs

        $env:PYTHON_ROOT=C:\Python27
      
        curl -L https://github.com/wxWidgets/wxWidgets/releases/download/v3.0.4/wxWidgets-3.0.4.7z -o wxWidgets-3.0.4.7z
       7z x wxWidgets-3.0.4.7z -y -o"wxWidgets-3.0.4" >NUL
       cd c:\projects\gdl\win32libs\wxWidgets-3.0.4\build\msw
       mingw32-make SHELL=cmd -f makefile.gcc setup_h BUILD=release SHARED=1 USE_GUI=1 USE_XRC=0 USE_HTML=0 USE_WEBVIEW=0 USE_MEDIA=0 USE_AUI=0 USE_RIBBON=0 USE_PROPGRID=0 USE_RICHTEXT=0 USE_STC=0 USE_OPENGL=0 VENDOR=gdl DEBUG_FLAG=0
       mingw32-make SHELL=cmd -f makefile.gcc BUILD=release SHARED=1 USE_GUI=1 USE_XRC=0 USE_HTML=0 USE_WEBVIEW=0 USE_MEDIA=0 USE_AUI=0 USE_RIBBON=0 USE_PROPGRID=0 USE_RICHTEXT=0 USE_STC=0 USE_OPENGL=0 VENDOR=gdl DEBUG_FLAG=0
       cd c:\projects\gdl\win32libs
       $env:WXWIDGETS_ROOT=c:\projects\gdl\wxWidgets-3.0.4      
     }
  - ps: $env:CMAKE_ARGS = '-DEIGEN3_INCLUDE_DIR="C:\projects\eigen-eigen-da9b4e14c255" -DEDITLINE=no -DREADLINE=no'
  # - if %platform%==mingw64630x8664 set PATH=C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw32\bin;%PATH%
  # - if %platform%==mingw64630x8664 set PYTHON_ROOT=C:\Python27-x64

before_build:
  - cd c:\projects\gdl
  - dir

build_script:
  - md build
  - cd build
  - cmake .. %CMAKE_ARGS% -G "MinGW Makefiles" -DPYTHON_EXECUTABLE=%PYTHON_ROOT%\python.exe -DPYTHON_INCLUDE_DIR=%PYTHON_ROOT%\include

  - cmake --build . --config Debug
  - mingw32-make
  # - cmake --build . --config Release

  # - ctest -C Debug --output-on-failure
  # - ctest -C Release --output-on-failure

  # - cmake --build . --target install
  # - python -c "import gdl; dir(gdl)"
